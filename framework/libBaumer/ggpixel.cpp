#include "ggpixel.h"



namespace GG {



ggpixel::ggpixel():
  _data()
{}


////////////////////////////////////////////////////////////////////////////////


  /// 

ggpixel::ggpixel(unsigned int r,
	     unsigned int g,
	     unsigned int b):
  _data()
{
  _data[0] = r;
  _data[1] = g;
  _data[2] = b;
}


////////////////////////////////////////////////////////////////////////////////


  /// 

ggpixel::ggpixel( const ggpixel& p):
  _data()
{
  _data[0] = p(0);
  _data[1] = p(1);
  _data[2] = p(2);
}


////////////////////////////////////////////////////////////////////////////////


  /// 

ggpixel::~ggpixel()
{}


////////////////////////////////////////////////////////////////////////////////


  /// 

const unsigned char&
ggpixel::operator () (unsigned char rgb) const
{
  return _data[rgb];
}


////////////////////////////////////////////////////////////////////////////////


  /// 

const ggpixel&
ggpixel::operator = (const ggpixel& rhs)
{
  _data[0] = rhs(0);
  _data[1] = rhs(1);
  _data[2] = rhs(2);
  
  return (*this);
}


////////////////////////////////////////////////////////////////////////////////


  /// 

unsigned char&
ggpixel::operator () (unsigned char rgb)
{
  return _data[rgb];
}


////////////////////////////////////////////////////////////////////////////////


  /// 

unsigned char*
ggpixel::getData()
{
  return _data; 
}


////////////////////////////////////////////////////////////////////////////////


unsigned char&
ggpixel::operator[](unsigned int a)
{
    return (3 < a) ? _data[0] : _data[a];
}


////////////////////////////////////////////////////////////////////////////////


const unsigned char&
ggpixel::operator[] (unsigned int a) const
{
  return (3 < a) ? _data[0] : _data[a];
}


////////////////////////////////////////////////////////////////////////////////


  /// 




}; // namespace GG
